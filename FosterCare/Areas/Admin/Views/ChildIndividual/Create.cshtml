@model FosterCare.ChildIndividualTbl

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imgpreview').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]); // convert to base64 string
        }
    }
    function GetDistrictByState() {
        var State = $('#State').val();
        $.ajax({
            url: '/ChildInstitution/GetDistrictByState',
            type: "POST",
            dataType: "JSON",
            data: { StateID: State },
            success: function (response) {
                console.log(response);
                $("#District").html("");
                if (response.length != 0) {
                    $('#District').append(new Option("--Select District--", ""));
                    $.each(response, function (i, GramPanchayatID) {
                        $('#District').append(new Option(GramPanchayatID.Text, GramPanchayatID.Value));
                    });
                }
                else {
                    $('#District').append(new Option("---No District Found !---", ""));
                }
            }
        });
    }

    function GetDistrictByStateChild() {
        var ChildState = $('#ChildState').val();
        $.ajax({
            url: '/ChildInstitution/GetDistrictByState',
            type: "POST",
            dataType: "JSON",
            data: { StateID: ChildState },
            success: function (response) {
                console.log(response);
                $("#ChildDistrict").html("");
                if (response.length != 0) {
                    $('#ChildDistrict').append(new Option("--Select District--", ""));
                    $.each(response, function (i, GramPanchayatID) {
                        $('#ChildDistrict').append(new Option(GramPanchayatID.Text, GramPanchayatID.Value));
                    });
                }
                else {
                    $('#ChildDistrict').append(new Option("---No District Found !---", ""));
                }
            }
        });
    }

    function GetTehsilByDistrict() {
        var District = $('#District').val();
        $.ajax({
            url: '/ChildInstitution/GetTehsilByDistrict',
            type: "POST",
            dataType: "JSON",
            data: { DistrictID: District },
            success: function (response) {
                $("#Tehsil").html("");
                if (response.length != 0) {
                    $('#Tehsil').append(new Option("--Select Tehsil--", ""));
                    $.each(response, function (i, TehsilID) {
                        $('#Tehsil').append(new Option(TehsilID.Text, TehsilID.Value));
                    });
                }
                else {
                    $('#Tehsil').append(new Option("---No Tehsil Found !---", ""));
                }
            }
        });
    }

    function GetTehsilByDistrictChild() {
        var ChildDistrict = $('#ChildDistrict').val();
        $.ajax({
            url: '/ChildInstitution/GetTehsilByDistrict',
            type: "POST",
            dataType: "JSON",
            data: { DistrictID: ChildDistrict },
            success: function (response) {
                $("#ChildTehsil").html("");
                if (response.length != 0) {
                    $('#ChildTehsil').append(new Option("--Select Tehsil--", ""));
                    $.each(response, function (i, TehsilID) {
                        $('#ChildTehsil').append(new Option(TehsilID.Text, TehsilID.Value));
                    });
                }
                else {
                    $('#ChildTehsil').append(new Option("---No Tehsil Found !---", ""));
                }
            }
        });
    }

    function GetChildCategory(val) {
        console.log(val);
        if (val == 7) {
            $('#physicallyillness').css("display", "");
        }
        else {
            $('#physicallyillness').css("display", "none");
        }
    }

    function SetOther(val1) {
        console.log(val1);
        if (val == 'Other') {
            $('#other').css("display", "");
        }
        else {
            $('#other').css("display", "none");
        }
    }

</script>


<section class="content-header">
    <h1>Add Child Individual<small>(Add Child Individual)</small></h1>
</section>
<section class="content">

    @using (Html.BeginForm("Create", "ChildIndividual", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div class="row">
            <div class="col-md-12">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box box-warning">
                    <div class="box-body">
                        <div class="form-group">
                            <label>Name</label>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            <label>Age</label>
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            <label>Gender</label>
                            @Html.DropDownList("Gender", new List<SelectListItem>
                                         {
                                               new SelectListItem { Text = "Boy", Value = "Boy", },
                                                new SelectListItem { Text = "Girl", Value = "Girl", },


                                         }, "----Select----", htmlAttributes: new { @class = "form-control", required = "required" })
                        </div>

                        <div class="form-group">
                            <label>Phone Number</label>
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                        <div class="form-group">
                            <label>Email</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>State Name</label>
                            @Html.DropDownList("State", null,"--Select--", htmlAttributes: new { @class = "form-control", onchange = "GetDistrictByState()", required = "required" })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">

                            <label>District Name</label>
                            @Html.DropDownList("District", null, "--Select--", htmlAttributes: new { @class = "form-control", onchange = "GetTehsilByDistrict()", required = "required" })
                            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Tehsil Name</label>
                            @Html.DropDownList("Tehsil", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Tehsil, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Child Name</label>
                            @Html.EditorFor(model => model.ChildName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ChildName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Child Age</label>
                            @Html.EditorFor(model => model.ChildAge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ChildAge, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Child Gender</label>
                            @Html.DropDownList("ChildGender", new List<SelectListItem>
                                      {
                                            new SelectListItem { Text = "Boy", Value = "Boy", },
                                             new SelectListItem { Text = "Girl", Value = "Girl", },


                                      }, "----Select----", htmlAttributes: new { @class = "form-control", required = "required" })
                        </div>

                        <div class="form-group">
                            <label>Father Name</label>
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Mother Name</label>
                            @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Child State</label>
                            @Html.DropDownList("ChildState", null, "--Select--", htmlAttributes: new { @class = "form-control", onchange = "GetDistrictByStateChild()", required = "required" })
                            @Html.ValidationMessageFor(model => model.ChildState, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            <label>Child District</label>
                            @Html.DropDownList("ChildDistrict", null,"--Select--", htmlAttributes: new { @class = "form-control", onchange = "GetTehsilByDistrictChild()", required = "required" })
                            @Html.ValidationMessageFor(model => model.ChildDistrict, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Child Tehsil</label>
                            @Html.DropDownList("ChildTehsil", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ChildTehsil, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Social Category</label>
                            @Html.DropDownList("SocialCategory", new List<SelectListItem>
                                      {
                                            new SelectListItem { Text = "Gen", Value = "Gen", },
                                             new SelectListItem { Text = "ST", Value = "ST", },
                                            new SelectListItem { Text = "SC", Value = "SC"},
                                            new SelectListItem { Text = "OBC", Value = "OBC"},

                                      }, "----Select----", htmlAttributes: new { @class = "form-control", required = "required" })
                        </div>

                        <div class="form-group">
                            <label>Category Of Child</label>
                            @Html.DropDownList("ChildCategory", null, "--Select--", htmlAttributes: new { @class = "form-control", @onchange = "GetChildCategory(this.value)", required = "required" })
                        </div>

                        <div class="form-group" id="physicallyillness" style="display:none">
                            <label>Physically illness</label>
                            <input type="radio" id="Otherillnesss" name="Otherillnesss" value="1" class="form-control" onchange="SetOther(this.Value)" />
                            <input type="radio" id="Otherillnesss" name="Otherillnesss" value="2" class="form-control" onchange="SetOther(this.Value)" />
                            <input type="radio" id="Otherillnesss" name="Otherillnesss" value="3" class="form-control" onchange="SetOther(this.value)" />
                            <input type="radio" id="Otherillnesss" name="Otherillnesss" value="4" class="form-control" onclick="SetOther(this)" />
                        </div>


                        <div class="form-group" id="other" style="display:none">
                            <label>Otherillness</label>
                            @Html.EditorFor(model => model.Otherillness, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Otherillness, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label>Child Image</label>
                            <input id="ChildImage" onchange="readURL(this);" type="file" name="ChildImage" required />
                            <img id="imgpreview" class="img-thumbnail" style="width:200px" alt="Preview" />
                        </div>


                    </div>
                    <div class="box-footer">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        <a href="/Admin/ChildIndividual/Index" class="btn btn-dropbox">Back to List</a>
    </div>
</section>